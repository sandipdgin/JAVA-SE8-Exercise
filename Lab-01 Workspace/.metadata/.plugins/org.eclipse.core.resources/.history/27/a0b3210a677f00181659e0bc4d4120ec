package com.acme.testing;

import com.acme.domain.Service;
import com.acme.domain.Good;
import com.acme.domain.Good.UnitOfMeasureType;
import com.acme.domain.Order;
import com.acme.domain.Product;
import com.acme.domain.Solid;
import com.acme.utils.MyDate;

public class TestOrders {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		/*MyDate date1 = new MyDate(1, 20, 2008);
		Order anvil = new Order(date1, 2000.00, "Wile E Coyote", "Anvil", 10);

		MyDate date2 = new MyDate(4, 10, 2008);
		Order balloons = new Order(date2, 1000.00, "Bugs Bunny", "Balloon", 125);*/
		
		//Good g = new Good("Acme Earthquake Pills", 1304, 0.15, UnitOfMeasureType.CUBIC_FEET, false, 1);

		
		MyDate date1 = new MyDate(1, 20, 2008);
		Solid s1 = new Solid("Acme Anvil", 1668, 0.3, UnitOfMeasureType.CUBIC_METER, false, 500, 0.25, 0.3);
		Order anvil = new Order(date1, 2000.00, "Wile E Coyote", s1, 10);
		MyDate date2 = new MyDate(4, 10, 2008);
		Solid s2 = new Solid("Acme Balloon", 1401, 15, UnitOfMeasureType.CUBIC_FEET, false, 10, 5, 5);
		Order balloons = new Order(date2, 1000.00, "Bugs Bunny", s2, 125);

		System.out.println(anvil);
		System.out.println(balloons);

		System.out.println("The tax Rate is currently: " + Order.taxRate);
		Order.computeTaxOn(3000.00);
		anvil.computeTax();
		balloons.computeTax();

		Order.setTaxRate(0.06);
		System.out.println("The tax Rate is currently: " + Order.taxRate);
		Order.computeTaxOn(3000.00);
		anvil.computeTax();
		balloons.computeTax();

		// bonus lab
		//MyDate date3 = new MyDate(5, 20, 2008);
		//Order anotherAnvil = new Order(date3, 200, "Road Runner");
		//System.out.println(anotherAnvil);

		// lab 6
		System.out.println("The total bill for: " + anvil + " is " + anvil.computeTotal());
		System.out.println("The total bill for: " + balloons + " is " + balloons.computeTotal());
		
		// bonus lab - lab 10 - start
		System.out.println("The volume of the anvil is: " + ((Good) anvil.getProduct()).volume());
		System.out.println("The length of the anvil is: " +((Solid) anvil.getProduct()).getLength());
		// bonus lab - lab 10 - end
		
		
		// lab 11 - start
		MyDate date3 = new MyDate(4,10,2008);
		Service s3 = new Service("Road Runner Eradication", 14, false);
		Order birdEradication = new Order(date3, 20000, "Daffy Duck", (Product) s3, 1);
		System.out.println("The total bill for: " + birdEradication + " is " + birdEradication.computeTotal());
		// lab 11 - end
		
		
		// lab 12 - start
		System.out.println("Anvil isPriorityOrder: " + anvil.isPriorityOrder()); // true
		System.out.println("Balloons isPriorityOrder: " + balloons.isPriorityOrder()); // false
		
		// lab 12 - end


	}

}

/*
 * console output- 10 ea. Anvil for Wile E Coyote 125 ea. Balloon for Bugs Bunny
 * The tax Rate is currently: 0.05 The tax for 3000.0 is: 150.0 The tax for this
 * order is: 100.0 The tax for this order is: 50.0 The tax Rate is currently:
 * 0.06 The tax for 3000.0 is: 180.0 The tax for this order is: 120.0 The tax
 * for this order is: 60.0
 */